services:
  # Database
  postgres:
    image: postgres:16-alpine
    container_name: task-flow-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-taskflow}
      POSTGRES_USER: ${POSTGRES_USER:-taskflow}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-taskflow123}
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - task-flow-network

  # Message Broker
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: task-flow-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-taskflow}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-taskflow123}
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - task-flow-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: task-flow-redis
    ports:
      - "6380:6380"
    volumes:
      - redis_data:/data
    networks:
      - task-flow-network

  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: apps/api-gateway/Dockerfile
    container_name: task-flow-gateway
    ports:
      - "${API_GATEWAY_PORT:-3000}:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - DATABASE_URL=${DATABASE_URL}
      - RABBITMQ_URL=${RABBITMQ_URL}
      - REDIS_URL=${REDIS_URL}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - API_GATEWAY_PORT=${API_GATEWAY_PORT:-3000}
      - RATE_LIMIT_TTL=${RATE_LIMIT_TTL:-60}
      - RATE_LIMIT_LIMIT=${RATE_LIMIT_LIMIT:-10}
    depends_on:
      - postgres
      - rabbitmq
      - redis
    networks:
      - task-flow-network

  # Task Service
  task-service:
    build:
      context: .
      dockerfile: apps/task-service/Dockerfile
    container_name: task-flow-task-service
    ports:
      - "${TASK_SERVICE_PORT:-3001}:3001"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - DATABASE_URL=${DATABASE_URL}
      - RABBITMQ_URL=${RABBITMQ_URL}
      - REDIS_URL=${REDIS_URL}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - TASK_SERVICE_PORT=${TASK_SERVICE_PORT:-3001}
    depends_on:
      - postgres
      - rabbitmq
      - redis
    networks:
      - task-flow-network

  # Notification Service
  notification-service:
    build:
      context: .
      dockerfile: apps/notification-service/Dockerfile
    container_name: task-flow-notification-service
    ports:
      - "${NOTIFICATION_SERVICE_PORT:-3002}:3002"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - DATABASE_URL=${DATABASE_URL}
      - RABBITMQ_URL=${RABBITMQ_URL}
      - REDIS_URL=${REDIS_URL}
      - NOTIFICATION_SERVICE_PORT=${NOTIFICATION_SERVICE_PORT:-3002}
    depends_on:
      - postgres
      - rabbitmq
      - redis
    networks:
      - task-flow-network

  # Frontend Web App
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    container_name: task-flow-web
    ports:
      - "5173:4173"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - VITE_API_URL=${VITE_API_URL}
      - VITE_WS_URL=${VITE_WS_URL}
    depends_on:
      - api-gateway
    networks:
      - task-flow-network

volumes:
  postgres_data:
  rabbitmq_data:
  redis_data:

networks:
  task-flow-network:
    driver: bridge